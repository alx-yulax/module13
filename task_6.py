print('Задача 6. Яйца')


# В рамках программы колонизации Марса
# компания «Спейс Инжиниринг» вывела особую породу черепах,
# которые, по задумке, должны размножаться, откладывая яйца в марсианском грунте.
# Откладывать яйца слишком близко к поверхности опасно из-за радиации,
# а слишком глубоко — из-за давления грунта и недостатка кислорода.
# Вообще, факторов очень много,
# но специалисты проделали большую работу и предположили,
# что уровень опасности для черепашьих яиц рассчитывается по формуле
# D = x**3 − 3x**2 − 12x + 10,
# где x — глубина кладки в метрах,
# а D — уровень опасности в условных единицах.
#
# Для тестирования гипотезы
# нужно взять пробу грунта на безопасной, согласно формуле, глубине.
#
# Напишите программу,
# находящую такое значение глубины "х", при котором уровень опасности как можно более близок к нулю.
# На вход программе подаётся максимально допустимое отклонение уровня опасности от нуля,
# а программа должна рассчитать приблизительное значение "х",
# удовлетворяющее этому отклонению.
#
# Известно, что глубина точно больше нуля и меньше четырёх метров.
#
# Обеспечьте контроль ввода.
#
# Пример:
# Введите максимально допустимый уровень опасности: 0.01
#
# Приблизительная глубина безопасной кладки: 0.732421875 м

def danger_level(x):
    return x ** 3 - 3 * x ** 2 - 12 * x + 10


def find_safe_depth(tolerance):
    left = 0.0
    right = 4.0
    result = 10

    while abs(result) > tolerance:
        mid = (left + right) / 2
        result = danger_level(mid)
        if result > 0:
            left = mid
        else:
            right = mid
    return mid


def main():
    tolerance = float(input("Введите максимально допустимый уровень опасности: "))
    if tolerance <= 0:
        print("Отклонение должно быть положительным числом. Попробуйте снова.")
    else:
        safe_depth = find_safe_depth(tolerance)
        print(f"Приблизительная глубина безопасной кладки: {safe_depth:.8f} м")


main()
